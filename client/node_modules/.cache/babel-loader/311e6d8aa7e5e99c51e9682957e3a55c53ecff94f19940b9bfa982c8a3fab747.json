{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\P0037878\\\\Downloads\\\\detectors\\\\portfolio\\\\RTChat\\\\client\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Paper, TextField, IconButton, Typography, List, ListItem, ListItemText, ListItemIcon, Drawer, ListItemButton, Avatar, Tabs, Tab, Badge } from '@mui/material';\nimport { Send as SendIcon, ExitToApp as LogoutIcon, Menu as MenuIcon, Person as PersonIcon, Group as GroupIcon } from '@mui/icons-material';\nimport io from 'socket.io-client';\nimport axios from 'axios';\n\n// API Configuration\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nconst Chat = () => {\n  _s();\n  const navigate = useNavigate();\n  const [messages, setMessages] = useState([]);\n  const [groupMessages, setGroupMessages] = useState({});\n  const [newMessage, setNewMessage] = useState('');\n  const [socket, setSocket] = useState(null);\n  const [users, setUsers] = useState([]);\n  const [groups, setGroups] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [tabValue, setTabValue] = useState(0);\n  const messagesEndRef = useRef(null);\n  const currentUser = {\n    id: localStorage.getItem('userId'),\n    username: localStorage.getItem('username')\n  };\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, selectedGroup]);\n\n  // Fetch users from API\n  const fetchUsers = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) return;\n      const response = await axios.get(`${API_URL}/api/users`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // Filter out current user\n      const filteredUsers = response.data.filter(user => user.id !== currentUser.id && user._id !== currentUser.id);\n      setUsers(filteredUsers);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  }, [currentUser.id]);\n\n  // Fetch groups from API\n  const fetchGroups = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) return;\n      const response = await axios.get(`${API_URL}/api/groups`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setGroups(response.data);\n    } catch (error) {\n      console.error('Error fetching groups:', error);\n    }\n  }, []);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n      return;\n    }\n\n    // Connect to socket with token for authentication\n    const newSocket = io(API_URL, {\n      auth: {\n        token\n      }\n    });\n    setSocket(newSocket);\n\n    // Listen for users updates\n    newSocket.on('users', updatedUsers => {\n      // Filter out current user\n      const filteredUsers = updatedUsers.filter(user => user.id !== currentUser.id);\n      setUsers(filteredUsers);\n    });\n\n    // Listen for groups updates\n    newSocket.on('groups', updatedGroups => {\n      setGroups(updatedGroups);\n    });\n\n    // Listen for private messages\n    newSocket.on('private message', message => {\n      if (selectedUser && (message.senderId === selectedUser.id || message.recipientId === selectedUser.id)) {\n        setMessages(prev => [...prev, message]);\n      }\n    });\n\n    // Listen for group messages\n    newSocket.on('group message', message => {\n      setGroupMessages(prev => {\n        const groupId = message.recipientId;\n        return {\n          ...prev,\n          [groupId]: [...(prev[groupId] || []), message]\n        };\n      });\n      if (selectedGroup && selectedGroup.id === message.recipientId) {\n        scrollToBottom();\n      }\n    });\n\n    // Fetch initial users and groups\n    fetchUsers();\n    fetchGroups();\n    return () => newSocket.close();\n  }, [navigate, currentUser.id, fetchUsers, fetchGroups, selectedUser, selectedGroup]);\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n    if (tabValue === 0 && selectedUser) {\n      // Send private message\n      const messageData = {\n        recipientId: selectedUser.id || selectedUser._id,\n        content: newMessage\n      };\n      socket.emit('private message', messageData);\n    } else if (tabValue === 1 && selectedGroup) {\n      // Send group message\n      const messageData = {\n        groupId: selectedGroup.id,\n        content: newMessage\n      };\n      socket.emit('group message', messageData);\n    }\n    setNewMessage('');\n  };\n  const handleUserSelect = user => {\n    setSelectedUser(user);\n    setSelectedGroup(null);\n    setTabValue(0);\n    setMessages([]); // Clear messages when selecting a new user\n  };\n  const handleGroupSelect = group => {\n    setSelectedGroup(group);\n    setSelectedUser(null);\n    setTabValue(1);\n  };\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n    if (newValue === 0) {\n      setSelectedGroup(null);\n    } else {\n      setSelectedUser(null);\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('username');\n    navigate('/login');\n  };\n\n  // Toggle drawer on mobile\n  const toggleDrawer = () => {\n    setDrawerOpen(!drawerOpen);\n  };\n\n  // Determine if we're on mobile\n  const isMobile = window.innerWidth < 768;\n\n  // Get current group messages\n  const currentGroupMessages = selectedGroup ? groupMessages[selectedGroup.id] || [] : [];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Drawer, {\n      variant: isMobile ? 'temporary' : 'permanent',\n      open: isMobile ? drawerOpen : true,\n      onClose: isMobile ? toggleDrawer : undefined,\n      sx: {\n        width: 240,\n        flexShrink: 0,\n        '& .MuiDrawer-paper': {\n          width: 240,\n          boxSizing: 'border-box'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'flex-end',\n          padding: 1\n        },\n        children: [isMobile && /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: toggleDrawer,\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"primary\",\n          onClick: handleLogout,\n          title: \"Logout\",\n          children: /*#__PURE__*/_jsxDEV(LogoutIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          overflow: 'auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Tabs, {\n          value: tabValue,\n          onChange: handleTabChange,\n          centered: true,\n          sx: {\n            borderBottom: 1,\n            borderColor: 'divider'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            icon: /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 24\n            }, this),\n            label: \"Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            icon: /*#__PURE__*/_jsxDEV(GroupIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 24\n            }, this),\n            label: \"Groups\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), tabValue === 0 ? /*#__PURE__*/_jsxDEV(List, {\n          children: users.length > 0 ? users.map(user => /*#__PURE__*/_jsxDEV(ListItemButton, {\n            selected: selectedUser && (selectedUser.id === user.id || selectedUser._id === user._id),\n            onClick: () => handleUserSelect(user),\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: user.username ? user.username.charAt(0).toUpperCase() : 'U'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 21\n            }, this)]\n          }, user.id || user._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 19\n          }, this)) : /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: \"No users available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(List, {\n          children: groups.length > 0 ? groups.map(group => {\n            var _group$members;\n            return /*#__PURE__*/_jsxDEV(ListItemButton, {\n              selected: selectedGroup && selectedGroup.id === group.id,\n              onClick: () => handleGroupSelect(group),\n              children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                children: /*#__PURE__*/_jsxDEV(Badge, {\n                  badgeContent: ((_group$members = group.members) === null || _group$members === void 0 ? void 0 : _group$members.length) || 0,\n                  color: \"primary\",\n                  children: /*#__PURE__*/_jsxDEV(GroupIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: group.name,\n                secondary: group.description || ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 21\n              }, this)]\n            }, group.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 19\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: \"No groups available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"main\",\n      sx: {\n        flexGrow: 1,\n        p: 3,\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100vh',\n        pt: 8,\n        // Add padding top to account for AppBar\n        alignItems: 'center' // Center horizontally\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          width: '100%',\n          maxWidth: '800px',\n          // Set a maximum width\n          flexGrow: 1,\n          p: 2,\n          display: 'flex',\n          flexDirection: 'column',\n          overflow: 'hidden',\n          mx: 'auto' // Center the paper component\n        },\n        children: [selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              mb: 2\n            },\n            children: [\"Chatting with \", selectedUser.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 1,\n              overflow: 'auto',\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(List, {\n              children: [messages.length > 0 ? messages.map((message, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n                sx: {\n                  justifyContent: 'center',\n                  '& .MuiPaper-root': {\n                    maxWidth: '70%',\n                    marginLeft: message.senderId === currentUser.id ? 'auto' : '0',\n                    marginRight: message.senderId === currentUser.id ? '0' : 'auto'\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(Paper, {\n                  sx: {\n                    p: 2,\n                    backgroundColor: message.senderId === currentUser.id ? 'primary.main' : 'grey.300',\n                    color: message.senderId === currentUser.id ? 'primary.contrastText' : 'text.primary'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    children: message.content\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 370,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    sx: {\n                      display: 'block'\n                    },\n                    children: new Date(message.timestamp).toLocaleTimeString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 25\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 23\n              }, this)) : /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  textAlign: 'center',\n                  mt: 4\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  color: \"textSecondary\",\n                  children: \"No messages yet. Start the conversation!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: messagesEndRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : selectedGroup ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              mb: 2\n            },\n            children: selectedGroup.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            sx: {\n              mb: 2\n            },\n            children: selectedGroup.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 1,\n              overflow: 'auto',\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(List, {\n              children: [currentGroupMessages.length > 0 ? currentGroupMessages.map((message, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n                sx: {\n                  justifyContent: 'center',\n                  '& .MuiPaper-root': {\n                    maxWidth: '70%',\n                    marginLeft: message.senderId === currentUser.id ? 'auto' : '0',\n                    marginRight: message.senderId === currentUser.id ? '0' : 'auto'\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(Paper, {\n                  sx: {\n                    p: 2,\n                    backgroundColor: message.senderId === currentUser.id ? 'primary.main' : 'grey.300',\n                    color: message.senderId === currentUser.id ? 'primary.contrastText' : 'text.primary'\n                  },\n                  children: [message.senderId !== currentUser.id && /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    sx: {\n                      fontWeight: 'bold'\n                    },\n                    children: message.senderUsername\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 431,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    children: message.content\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 435,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    sx: {\n                      display: 'block'\n                    },\n                    children: new Date(message.timestamp).toLocaleTimeString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 436,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 25\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 23\n              }, this)) : /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  textAlign: 'center',\n                  mt: 4\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  color: \"textSecondary\",\n                  children: \"No messages yet. Start the conversation!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: messagesEndRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"textSecondary\",\n            children: tabValue === 0 ? 'Select a user to start chatting' : 'Select a group to start chatting'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          onSubmit: handleSendMessage,\n          sx: {\n            display: 'flex',\n            gap: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            variant: \"outlined\",\n            placeholder: \"Type a message...\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            disabled: !(selectedUser || selectedGroup)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"primary\",\n            type: \"submit\",\n            disabled: !(selectedUser || selectedGroup) || !newMessage.trim(),\n            children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"IXtkY9Y0q1CbSUNG0ZiW8ZMACdU=\", false, function () {\n  return [useNavigate];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useNavigate","Box","Paper","TextField","IconButton","Typography","List","ListItem","ListItemText","ListItemIcon","Drawer","ListItemButton","Avatar","Tabs","Tab","Badge","Send","SendIcon","ExitToApp","LogoutIcon","Menu","MenuIcon","Person","PersonIcon","Group","GroupIcon","io","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","process","env","REACT_APP_API_URL","Chat","_s","navigate","messages","setMessages","groupMessages","setGroupMessages","newMessage","setNewMessage","socket","setSocket","users","setUsers","groups","setGroups","selectedUser","setSelectedUser","selectedGroup","setSelectedGroup","drawerOpen","setDrawerOpen","tabValue","setTabValue","messagesEndRef","currentUser","id","localStorage","getItem","username","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","fetchUsers","token","response","get","headers","Authorization","filteredUsers","data","filter","user","_id","error","console","fetchGroups","newSocket","auth","on","updatedUsers","updatedGroups","message","senderId","recipientId","prev","groupId","close","handleSendMessage","e","preventDefault","trim","messageData","content","emit","handleUserSelect","handleGroupSelect","group","handleTabChange","event","newValue","handleLogout","removeItem","toggleDrawer","isMobile","window","innerWidth","currentGroupMessages","sx","display","height","children","variant","open","onClose","undefined","width","flexShrink","boxSizing","justifyContent","padding","onClick","fileName","_jsxFileName","lineNumber","columnNumber","color","title","overflow","value","onChange","centered","borderBottom","borderColor","icon","label","length","map","selected","charAt","toUpperCase","primary","_group$members","badgeContent","members","name","secondary","description","component","flexGrow","p","flexDirection","pt","alignItems","elevation","maxWidth","mx","mb","index","marginLeft","marginRight","backgroundColor","Date","timestamp","toLocaleTimeString","textAlign","mt","ref","fontWeight","senderUsername","onSubmit","gap","fullWidth","placeholder","target","disabled","type","_c","$RefreshReg$"],"sources":["C:/Users/P0037878/Downloads/detectors/portfolio/RTChat/client/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  TextField,\r\n  IconButton,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Drawer,\r\n  ListItemButton,\r\n  Avatar,\r\n  Tabs,\r\n  Tab,\r\n  Badge,\r\n} from '@mui/material';\r\nimport {\r\n  Send as SendIcon,\r\n  ExitToApp as LogoutIcon,\r\n  Menu as MenuIcon,\r\n  Person as PersonIcon,\r\n  Group as GroupIcon,\r\n} from '@mui/icons-material';\r\nimport io from 'socket.io-client';\r\nimport axios from 'axios';\r\n\r\n// API Configuration\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\nconst Chat = () => {\r\n  const navigate = useNavigate();\r\n  const [messages, setMessages] = useState([]);\r\n  const [groupMessages, setGroupMessages] = useState({});\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [socket, setSocket] = useState(null);\r\n  const [users, setUsers] = useState([]);\r\n  const [groups, setGroups] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [selectedGroup, setSelectedGroup] = useState(null);\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const messagesEndRef = useRef(null);\r\n  const currentUser = {\r\n    id: localStorage.getItem('userId'),\r\n    username: localStorage.getItem('username'),\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages, selectedGroup]);\r\n\r\n  // Fetch users from API\r\n  const fetchUsers = useCallback(async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) return;\r\n\r\n      const response = await axios.get(`${API_URL}/api/users`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      // Filter out current user\r\n      const filteredUsers = response.data.filter(\r\n        user => user.id !== currentUser.id && user._id !== currentUser.id\r\n      );\r\n      \r\n      setUsers(filteredUsers);\r\n    } catch (error) {\r\n      console.error('Error fetching users:', error);\r\n    }\r\n  }, [currentUser.id]);\r\n\r\n  // Fetch groups from API\r\n  const fetchGroups = useCallback(async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) return;\r\n\r\n      const response = await axios.get(`${API_URL}/api/groups`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      setGroups(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching groups:', error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n\r\n    // Connect to socket with token for authentication\r\n    const newSocket = io(API_URL, {\r\n      auth: { token }\r\n    });\r\n    \r\n    setSocket(newSocket);\r\n\r\n    // Listen for users updates\r\n    newSocket.on('users', (updatedUsers) => {\r\n      // Filter out current user\r\n      const filteredUsers = updatedUsers.filter(\r\n        user => user.id !== currentUser.id\r\n      );\r\n      setUsers(filteredUsers);\r\n    });\r\n\r\n    // Listen for groups updates\r\n    newSocket.on('groups', (updatedGroups) => {\r\n      setGroups(updatedGroups);\r\n    });\r\n\r\n    // Listen for private messages\r\n    newSocket.on('private message', (message) => {\r\n      if (selectedUser && (message.senderId === selectedUser.id || message.recipientId === selectedUser.id)) {\r\n        setMessages((prev) => [...prev, message]);\r\n      }\r\n    });\r\n\r\n    // Listen for group messages\r\n    newSocket.on('group message', (message) => {\r\n      setGroupMessages(prev => {\r\n        const groupId = message.recipientId;\r\n        return {\r\n          ...prev,\r\n          [groupId]: [...(prev[groupId] || []), message]\r\n        };\r\n      });\r\n      \r\n      if (selectedGroup && selectedGroup.id === message.recipientId) {\r\n        scrollToBottom();\r\n      }\r\n    });\r\n\r\n    // Fetch initial users and groups\r\n    fetchUsers();\r\n    fetchGroups();\r\n\r\n    return () => newSocket.close();\r\n  }, [navigate, currentUser.id, fetchUsers, fetchGroups, selectedUser, selectedGroup]);\r\n\r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim()) return;\r\n\r\n    if (tabValue === 0 && selectedUser) {\r\n      // Send private message\r\n      const messageData = {\r\n        recipientId: selectedUser.id || selectedUser._id,\r\n        content: newMessage,\r\n      };\r\n\r\n      socket.emit('private message', messageData);\r\n    } else if (tabValue === 1 && selectedGroup) {\r\n      // Send group message\r\n      const messageData = {\r\n        groupId: selectedGroup.id,\r\n        content: newMessage,\r\n      };\r\n\r\n      socket.emit('group message', messageData);\r\n    }\r\n\r\n    setNewMessage('');\r\n  };\r\n\r\n  const handleUserSelect = (user) => {\r\n    setSelectedUser(user);\r\n    setSelectedGroup(null);\r\n    setTabValue(0);\r\n    setMessages([]); // Clear messages when selecting a new user\r\n  };\r\n\r\n  const handleGroupSelect = (group) => {\r\n    setSelectedGroup(group);\r\n    setSelectedUser(null);\r\n    setTabValue(1);\r\n  };\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n    if (newValue === 0) {\r\n      setSelectedGroup(null);\r\n    } else {\r\n      setSelectedUser(null);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('userId');\r\n    localStorage.removeItem('username');\r\n    navigate('/login');\r\n  };\r\n\r\n  // Toggle drawer on mobile\r\n  const toggleDrawer = () => {\r\n    setDrawerOpen(!drawerOpen);\r\n  };\r\n\r\n  // Determine if we're on mobile\r\n  const isMobile = window.innerWidth < 768;\r\n\r\n  // Get current group messages\r\n  const currentGroupMessages = selectedGroup ? (groupMessages[selectedGroup.id] || []) : [];\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', height: '100vh' }}>\r\n      <Drawer\r\n        variant={isMobile ? 'temporary' : 'permanent'}\r\n        open={isMobile ? drawerOpen : true}\r\n        onClose={isMobile ? toggleDrawer : undefined}\r\n        sx={{\r\n          width: 240,\r\n          flexShrink: 0,\r\n          '& .MuiDrawer-paper': {\r\n            width: 240,\r\n            boxSizing: 'border-box',\r\n          },\r\n        }}\r\n      >\r\n        <Box sx={{ display: 'flex', justifyContent: 'flex-end', padding: 1 }}>\r\n          {isMobile && (\r\n            <IconButton onClick={toggleDrawer}>\r\n              <MenuIcon />\r\n            </IconButton>\r\n          )}\r\n          <IconButton color=\"primary\" onClick={handleLogout} title=\"Logout\">\r\n            <LogoutIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <Box sx={{ overflow: 'auto' }}>\r\n          <Tabs value={tabValue} onChange={handleTabChange} centered sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n            <Tab icon={<PersonIcon />} label=\"Users\" />\r\n            <Tab icon={<GroupIcon />} label=\"Groups\" />\r\n          </Tabs>\r\n\r\n          {tabValue === 0 ? (\r\n            <List>\r\n              {users.length > 0 ? (\r\n                users.map((user) => (\r\n                  <ListItemButton\r\n                    key={user.id || user._id}\r\n                    selected={selectedUser && (selectedUser.id === user.id || selectedUser._id === user._id)}\r\n                    onClick={() => handleUserSelect(user)}\r\n                  >\r\n                    <ListItemIcon>\r\n                      <Avatar>\r\n                        {user.username ? user.username.charAt(0).toUpperCase() : 'U'}\r\n                      </Avatar>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={user.username} />\r\n                  </ListItemButton>\r\n                ))\r\n              ) : (\r\n                <ListItem>\r\n                  <ListItemText primary=\"No users available\" />\r\n                </ListItem>\r\n              )}\r\n            </List>\r\n          ) : (\r\n            <List>\r\n              {groups.length > 0 ? (\r\n                groups.map((group) => (\r\n                  <ListItemButton\r\n                    key={group.id}\r\n                    selected={selectedGroup && selectedGroup.id === group.id}\r\n                    onClick={() => handleGroupSelect(group)}\r\n                  >\r\n                    <ListItemIcon>\r\n                      <Badge badgeContent={group.members?.length || 0} color=\"primary\">\r\n                        <GroupIcon />\r\n                      </Badge>\r\n                    </ListItemIcon>\r\n                    <ListItemText \r\n                      primary={group.name} \r\n                      secondary={group.description || ''}\r\n                    />\r\n                  </ListItemButton>\r\n                ))\r\n              ) : (\r\n                <ListItem>\r\n                  <ListItemText primary=\"No groups available\" />\r\n                </ListItem>\r\n              )}\r\n            </List>\r\n          )}\r\n        </Box>\r\n      </Drawer>\r\n\r\n      <Box\r\n        component=\"main\"\r\n        sx={{\r\n          flexGrow: 1,\r\n          p: 3,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          height: '100vh',\r\n          pt: 8, // Add padding top to account for AppBar\r\n          alignItems: 'center', // Center horizontally\r\n        }}\r\n      >\r\n        <Paper\r\n          elevation={3}\r\n          sx={{\r\n            width: '100%',\r\n            maxWidth: '800px', // Set a maximum width\r\n            flexGrow: 1,\r\n            p: 2,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            overflow: 'hidden',\r\n            mx: 'auto', // Center the paper component\r\n          }}\r\n        >\r\n          {selectedUser ? (\r\n            <>\r\n              <Typography variant=\"h6\" sx={{ mb: 2 }}>\r\n                Chatting with {selectedUser.username}\r\n              </Typography>\r\n              <Box\r\n                sx={{\r\n                  flexGrow: 1,\r\n                  overflow: 'auto',\r\n                  mb: 2,\r\n                }}\r\n              >\r\n                <List>\r\n                  {messages.length > 0 ? (\r\n                    messages.map((message, index) => (\r\n                      <ListItem\r\n                        key={index}\r\n                        sx={{\r\n                          justifyContent: 'center',\r\n                          '& .MuiPaper-root': {\r\n                            maxWidth: '70%',\r\n                            marginLeft: message.senderId === currentUser.id ? 'auto' : '0',\r\n                            marginRight: message.senderId === currentUser.id ? '0' : 'auto',\r\n                          }\r\n                        }}\r\n                      >\r\n                        <Paper\r\n                          sx={{\r\n                            p: 2,\r\n                            backgroundColor:\r\n                              message.senderId === currentUser.id\r\n                                ? 'primary.main'\r\n                                : 'grey.300',\r\n                            color:\r\n                              message.senderId === currentUser.id\r\n                                ? 'primary.contrastText'\r\n                                : 'text.primary',\r\n                          }}\r\n                        >\r\n                          <Typography variant=\"body1\">{message.content}</Typography>\r\n                          <Typography variant=\"caption\" sx={{ display: 'block' }}>\r\n                            {new Date(message.timestamp).toLocaleTimeString()}\r\n                          </Typography>\r\n                        </Paper>\r\n                      </ListItem>\r\n                    ))\r\n                  ) : (\r\n                    <Box sx={{ textAlign: 'center', mt: 4 }}>\r\n                      <Typography variant=\"body1\" color=\"textSecondary\">\r\n                        No messages yet. Start the conversation!\r\n                      </Typography>\r\n                    </Box>\r\n                  )}\r\n                  <div ref={messagesEndRef} />\r\n                </List>\r\n              </Box>\r\n            </>\r\n          ) : selectedGroup ? (\r\n            <>\r\n              <Typography variant=\"h6\" sx={{ mb: 2 }}>\r\n                {selectedGroup.name}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" sx={{ mb: 2 }}>\r\n                {selectedGroup.description}\r\n              </Typography>\r\n              <Box\r\n                sx={{\r\n                  flexGrow: 1,\r\n                  overflow: 'auto',\r\n                  mb: 2,\r\n                }}\r\n              >\r\n                <List>\r\n                  {currentGroupMessages.length > 0 ? (\r\n                    currentGroupMessages.map((message, index) => (\r\n                      <ListItem\r\n                        key={index}\r\n                        sx={{\r\n                          justifyContent: 'center',\r\n                          '& .MuiPaper-root': {\r\n                            maxWidth: '70%',\r\n                            marginLeft: message.senderId === currentUser.id ? 'auto' : '0',\r\n                            marginRight: message.senderId === currentUser.id ? '0' : 'auto',\r\n                          }\r\n                        }}\r\n                      >\r\n                        <Paper\r\n                          sx={{\r\n                            p: 2,\r\n                            backgroundColor:\r\n                              message.senderId === currentUser.id\r\n                                ? 'primary.main'\r\n                                : 'grey.300',\r\n                            color:\r\n                              message.senderId === currentUser.id\r\n                                ? 'primary.contrastText'\r\n                                : 'text.primary',\r\n                          }}\r\n                        >\r\n                          {message.senderId !== currentUser.id && (\r\n                            <Typography variant=\"subtitle2\" sx={{ fontWeight: 'bold' }}>\r\n                              {message.senderUsername}\r\n                            </Typography>\r\n                          )}\r\n                          <Typography variant=\"body1\">{message.content}</Typography>\r\n                          <Typography variant=\"caption\" sx={{ display: 'block' }}>\r\n                            {new Date(message.timestamp).toLocaleTimeString()}\r\n                          </Typography>\r\n                        </Paper>\r\n                      </ListItem>\r\n                    ))\r\n                  ) : (\r\n                    <Box sx={{ textAlign: 'center', mt: 4 }}>\r\n                      <Typography variant=\"body1\" color=\"textSecondary\">\r\n                        No messages yet. Start the conversation!\r\n                      </Typography>\r\n                    </Box>\r\n                  )}\r\n                  <div ref={messagesEndRef} />\r\n                </List>\r\n              </Box>\r\n            </>\r\n          ) : (\r\n            <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}>\r\n              <Typography variant=\"h6\" color=\"textSecondary\">\r\n                {tabValue === 0 ? 'Select a user to start chatting' : 'Select a group to start chatting'}\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n\r\n          <Box\r\n            component=\"form\"\r\n            onSubmit={handleSendMessage}\r\n            sx={{\r\n              display: 'flex',\r\n              gap: 1,\r\n            }}\r\n          >\r\n            <TextField\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              placeholder=\"Type a message...\"\r\n              value={newMessage}\r\n              onChange={(e) => setNewMessage(e.target.value)}\r\n              disabled={!(selectedUser || selectedGroup)}\r\n            />\r\n            <IconButton\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              disabled={!(selectedUser || selectedGroup) || !newMessage.trim()}\r\n            >\r\n              <SendIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Paper>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chat; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}